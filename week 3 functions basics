Q1)  Write a function named same that takes a string as input, and simply returns that string.
code.
def same(str1):
    return str1


Q2)  Write a function called same_thing that returns the parameter, unchanged.
code.
def same_thing(par1):
    return par1
    
Q3) Write a function called subtract_three that takes an integer or any number as input, and returns that number minus three.
code.
def subtract_three(inum):
    return (inum - 3)
    
    
Q4) Write a function called change that takes one number as its input and returns that number, plus 7.
code.
def change(num):
    return num + 7
    
Q5) Write a function named intro that takes a string as input. Given the string “Becky” as input, the function should return: “Hello, my name is Becky and I love SI 106"
code.
def intro(str1):
    return "Hello, my name is "+str1+" and I love SI 106."
    
Q6) Write a function called s_change that takes one string as input and returns that string, concatenated with the string ” for fun.”.
code.
def s_change(str1):
    return str1+" for fun."
    
Q7)  Write a function called decision that takes a string as input, and then checks the number of characters. If it has over 17 characters, return “This is a long string”, if it is shorter or has 17 characters, return “This is a short string”.
code.

def decision(str1):
    char_count = len(str1)
    if char_count > 17:
        text = "This is a long string"
    else:
        text = "This is a short string"
    return text
    
 Q8) Write a function named total that takes a list of integers as input, and returns the total value of all those integers added together.
 code.
 def total(alist):
    sum_alist = 0 
    for item in alist:
        sum_alist = sum_alist + item
    return sum_alist

Q10)  Write a function called count that takes a list of numbers as input and returns a count of the number of elements in the list.
code.
def count(alist):
    list_len = len(alist)
    return list_len
        
        
        
##  course_2_assessment_4
Q1) Write a function called int_return that takes an integer as input and returns the same integer.
code.
def int_return(int_num):
    return int_num
    
Q2) Write a function called add that takes any number as its input and returns that sum with 2 added.
code.
def add(num):
    return num + 2
    
Q3) Write a function called change that takes any string, adds “Nice to meet you!” to the end of the argument given, and returns that new string.
code.
def change(text):
    new_str = text + "Nice to meet you!"
    return new_str
    
Q4) Write a function, accum, that takes a list of integers as input and returns the sum of those integers.
code.
def accum(ilist):
    total = 0
    for num in ilist:
        total = total + num
    return total 
 
Q5) Write a function, length, that takes in a list as the input. If the length of the list is greater than or equal to 5, return “Longer than 5”. If the length is less than 5, return “Less than 5”.
code.
def length(alist):
    if len(alist) >= 5 :
        text = "Longer than 5"
    else : 
        text = "Less than 5"
    return text

Q6) You will need to write two functions for this problem. The first function, divide that takes in any number and returns that same number divided by 2. The second function called sum should take any number, divide it by 2, and add 6. It should return this new number. You should call the divide function within the sum function. Do not worry about decimals.
code.
def divide(num):
    div_num = num / 2
    return div_num
def sum(num):
    div_num = divide(num)
    add_num = div_num + 6
    return add_num
    
َ
َََ
## Tuple Packing

Q1) Provided is a list of tuples. Create another list called t_check that contains the third element of every tuple.
code.

lst_tups = [('Articuno', 'Moltres', 'Zaptos'), ('Beedrill', 'Metapod', 'Charizard', 'Venasaur', 'Squirtle'), ('Oddish', 'Poliwag', 'Diglett', 'Bellsprout'), ('Ponyta', "Farfetch'd", "Tauros", 'Dragonite'), ('Hoothoot', 'Chikorita', 'Lanturn', 'Flaaffy', 'Unown', 'Teddiursa', 'Phanpy'), ('Loudred', 'Volbeat', 'Wailord', 'Seviper', 'Sealeo')]
t_check = []
for tup in lst_tups:
    t_check.append(tup[2])
    
Q2)  Below, we have provided a list of tuples. Write a for loop that saves the second element of each tuple into a list called seconds.
code.
tups = [('a', 'b', 'c'), (8, 7, 6, 5), ('blue', 'green', 'yellow', 'orange', 'red'), (5.6, 9.99, 2.5, 8.2), ('squirrel', 'chipmunk')]

seconds = []
for tup in tups:
    seconds.append(tup[1])
    
    
Assessment: Tuples

Q1)  Create a tuple called olympics with four elements: “Beijing”, “London”, “Rio”, “Tokyo”.

olympics = "Beijing", "London", "Rio", "Tokyo"
print(olympics)


Q2) The list below, tuples_lst, is a list of tuples. Create a list of the second elements of each tuple and assign this list to the variable country.

tuples_lst = [('Beijing', 'China', 2008), ('London', 'England', 2012), ('Rio', 'Brazil', 2016, 'Current'), ('Tokyo', 'Japan', 2020, 'Future')]
country = []
for tup in tuples_lst:
    country.append(tup[1])
    
 Q3) With only one line of code, assign the variables city, country, and year to the values of the tuple olymp.

olymp = ('Rio', 'Brazil', 2016)
city, country, year =  olymp

Q4) Define a function called info with five parameters: name, gender, age, bday_month, and hometown. The function should then return a tuple with all five parameters in that order.
def info(name,gender,age,bday_month,hometown):
    return name,gender,age,bday_month,hometown
    
    
 Q5) Given is the dictionary, gold, which shows the country and the number of gold medals they have earned so far in the 2016 Olympics. Create a list, num_medals, that contains only the number of medals for each country. You must use the .items() method. Note: The .items() method provides a list of tuples. Do not use .keys() method.
gold = {'USA':31, 'Great Britain':19, 'China':19, 'Germany':13, 'Russia':12, 'Japan':10, 'France':8, 'Italy':8}
num_medals = []
for k , v in gold.items():
    num_medals.append(v)
    
